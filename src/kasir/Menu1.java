package kasir;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;

/**
 *
 * @author LENOVO
 */
public class Menu1 extends javax.swing.JPanel {

    
    public Menu1() {
        initComponents();
        load_tabel_menu();
        reset();
        kodeMenu();
        tKodeMenu.setEditable(false);

    }
    void kodeMenu() {
        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT id_menu FROM menu ORDER BY id_menu DESC LIMIT 1");

            String kodeBaru = "M001"; // Default kode awal

            if (rs.next()) {
                String kodeLama = rs.getString("id_menu"); // contoh: M005
                int angka = Integer.parseInt(kodeLama.substring(1)) + 1; // ambil angka: 5 + 1
                kodeBaru = String.format("M%03d", angka); // hasil: M006
            }

            tKodeMenu.setText(kodeBaru);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal generate kode menu!\n" + e.getMessage());
        }
    }
    
    void reset (){
        
        tNamaMenu.setText(null);
        cKategori.setSelectedItem(null);
        tHarga.setText(null);
        kodeMenu();
        
    
    }
    
    void load_tabel_menu() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Menu");
        model.addColumn("Nama Menu");
        model.addColumn("Kategori");
        model.addColumn("Harga");

        String sql = "SELECT m.id_menu, m.nama_menu, km.nama_kategori, m.harga " +
                     "FROM menu m " +
                     "JOIN kategori_menu km ON m.id_kategori = km.id_kategori";

        try {
            Connection conn = koneksi.konek();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String kode = rs.getString("id_menu");
                String nama = rs.getString("nama_menu");
                String kategori = rs.getString("nama_kategori");
                int hargaInt = rs.getInt("harga");

                String harga = formatRupiah(hargaInt); // ‚Üê format harga ke Rupiah

                Object[] baris = {kode, nama, kategori, harga};
                model.addRow(baris);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal mengambil data menu!");
        }

        tblMenu.setModel(model);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUbah = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbClose = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tKodeMenu = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        tNamaMenu = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tHarga = new javax.swing.JTextField();
        btnTamnbah = new javax.swing.JButton();
        btnUbah1 = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cKategori = new javax.swing.JComboBox<>();

        btnUbah.setBackground(new java.awt.Color(163, 145, 2));
        btnUbah.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUbah.setForeground(new java.awt.Color(255, 255, 255));
        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-edit-20.png"))); // NOI18N
        btnUbah.setText("Ubah");

        setBackground(new java.awt.Color(229, 229, 229));

        jPanel1.setBackground(new java.awt.Color(154, 70, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/foto3.png"))); // NOI18N
        jLabel1.setText("Menu");
        jLabel1.setIconTextGap(20);

        lbClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-close-40.png"))); // NOI18N
        lbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbClose)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbClose)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Kode Menu");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Nama Menu");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Kategori");

        tKodeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tKodeMenuActionPerformed(evt);
            }
        });

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMenuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMenu);

        tNamaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNamaMenuActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Harga");

        tHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tHargaActionPerformed(evt);
            }
        });
        tHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tHargaKeyReleased(evt);
            }
        });

        btnTamnbah.setBackground(new java.awt.Color(22, 134, 3));
        btnTamnbah.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTamnbah.setForeground(new java.awt.Color(255, 255, 255));
        btnTamnbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-add-20.png"))); // NOI18N
        btnTamnbah.setText("Tambah");
        btnTamnbah.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnTamnbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTamnbahActionPerformed(evt);
            }
        });

        btnUbah1.setBackground(new java.awt.Color(163, 145, 2));
        btnUbah1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUbah1.setForeground(new java.awt.Color(255, 255, 255));
        btnUbah1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-edit-20.png"))); // NOI18N
        btnUbah1.setText("Ubah");
        btnUbah1.setBorder(null);
        btnUbah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbah1ActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(134, 3, 5));
        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-delete-20.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setBorder(null);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(3, 93, 134));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kasir/icons8-reset-20 (1).png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 0, 1, 1));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minuman", "Tusukan" }));
        cKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cKategoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTamnbah, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUbah1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cKategori, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tNamaMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                .addComponent(tKodeMenu, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tHarga)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tKodeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tNamaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTamnbah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUbah1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lbCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMouseClicked
        // TODO add your handling code here:
        removeAll();
        repaint();
        revalidate();
        
    }//GEN-LAST:event_lbCloseMouseClicked

    private void tKodeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tKodeMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tKodeMenuActionPerformed

    private void tNamaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNamaMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNamaMenuActionPerformed

    private void tHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tHargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tHargaActionPerformed

    private void tblMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMenuMouseClicked
        // TODO add your handling code here:
        int row = tblMenu.getSelectedRow();
        tKodeMenu.setText(tblMenu.getValueAt(row, 0).toString());
        tNamaMenu.setText(tblMenu.getValueAt(row, 1).toString());
        cKategori.setSelectedItem(tblMenu.getValueAt(row, 2).toString());

        String hargaStr = tblMenu.getValueAt(row, 3).toString().replaceAll("[^\\d]", ""); // buang Rp, titik
        int harga = Integer.parseInt(hargaStr);
        tHarga.setText(formatRupiah(harga));
    }//GEN-LAST:event_tblMenuMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
       
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnTamnbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTamnbahActionPerformed
        // TODO add your handling code here:
        String kodeMenu = tKodeMenu.getText();
        String namaMenu = tNamaMenu.getText();
        String kategori = cKategori.getSelectedItem() != null ? cKategori.getSelectedItem().toString() : null;
        String hargaText = tHarga.getText().replaceAll("[^\\d]", "");
        String idKategori = null;

        if (kategori == null || kodeMenu.isEmpty() || namaMenu.isEmpty() || hargaText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua field wajib diisi!");
            return;
        }

        // Mapping kategori ke ID
        if (kategori.equals("Minuman")) {
            idKategori = "K001";
        } else if (kategori.equals("Tusukan")) {
            idKategori = "K002";
        } else {
            JOptionPane.showMessageDialog(null, "Kategori tidak valid!");
            return;
        }

        int harga;
        try {
            harga = Integer.parseInt(hargaText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Harga harus berupa angka!");
            return;
        }

        String sql = "INSERT INTO menu (id_menu, nama_menu, id_kategori, harga) VALUES (?, ?, ?, ?)";

        try {
            Connection conn = koneksi.konek();
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, kodeMenu);
            ps.setString(2, namaMenu);
            ps.setString(3, idKategori);
            ps.setInt(4, harga);
            ps.execute();

            JOptionPane.showMessageDialog(null, "Menu berhasil ditambahkan!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data gagal disimpan!\n" + e.getMessage());
        }

        load_tabel_menu();
        reset();

    }//GEN-LAST:event_btnTamnbahActionPerformed

    private void btnUbah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbah1ActionPerformed
        // TODO add your handling code here:
        String kodeMenu = tKodeMenu.getText();
        String namaMenu = tNamaMenu.getText();
        String kategori = cKategori.getSelectedItem() != null ? cKategori.getSelectedItem().toString() : null;
        String hargaText = tHarga.getText().replaceAll("[^\\d]", "");

        if (kodeMenu.isEmpty() || namaMenu.isEmpty() || kategori == null || hargaText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua field wajib diisi!");
            return;
        }

        int harga;
        try {
            harga = Integer.parseInt(hargaText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Harga harus berupa angka!");
            return;
        }

        // Mapping kategori ke id_kategori
        String idKategori;
        if (kategori.equals("Minuman")) {
            idKategori = "K001";
        } else if (kategori.equals("Tusukan")) {
            idKategori = "K002";
        } else {
            JOptionPane.showMessageDialog(null, "Kategori tidak valid!");
            return;
        }

        String sql = "UPDATE menu SET nama_menu=?, id_kategori=?, harga=? WHERE id_menu=?";
        try {
            Connection conn = koneksi.konek();
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, namaMenu);
            ps.setString(2, idKategori); // Gunakan id_kategori yang sesuai
            ps.setInt(3, harga);
            ps.setString(4, kodeMenu); // Perbaikan: setString(4) bukan setString(5)

            int updated = ps.executeUpdate();
            if (updated > 0) {
                JOptionPane.showMessageDialog(null, "Menu berhasil diubah!");
            } else {
                JOptionPane.showMessageDialog(null, "Kode menu tidak ditemukan!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data gagal diubah\n" + e.getMessage());
        }

        load_tabel_menu(); 
        reset();
    }//GEN-LAST:event_btnUbah1ActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        String kodeMenu = tKodeMenu.getText();

        if (kodeMenu.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus terlebih dahulu!");
            return;
        }

        // Konfirmasi sebelum hapus
        int konfirmasi = JOptionPane.showConfirmDialog(
            null,
            "Yakin ingin menghapus data ini?",
            "Konfirmasi Hapus",
            JOptionPane.OK_CANCEL_OPTION
        );

        if (konfirmasi == JOptionPane.OK_OPTION) {
            String sql = "DELETE FROM menu WHERE id_menu=?";
            try {
                Connection conn = koneksi.konek();
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, kodeMenu);
                ps.execute();

                JOptionPane.showMessageDialog(null, "Menu berhasil dihapus!");
            } catch (SQLException sQLException) {
                JOptionPane.showMessageDialog(null, "Menu gagal dihapus!\n" + sQLException.getMessage());
            }

            load_tabel_menu(); // refresh tabel menu
            reset();
        } 
    }//GEN-LAST:event_btnHapusActionPerformed

    private void cKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cKategoriActionPerformed

    private void tHargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tHargaKeyReleased
        // TODO add your handling code here:
         String input = tHarga.getText().replaceAll("[^\\d]", "");
        if (!input.isEmpty()) {
            try {
                int angka = Integer.parseInt(input);
                tHarga.setText(formatRupiah(angka));
            } catch (NumberFormatException e) {
                tHarga.setText("");
            }
        } else {
            tHarga.setText("");
        }
    }//GEN-LAST:event_tHargaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTamnbah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JButton btnUbah1;
    private javax.swing.JComboBox<String> cKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbClose;
    private javax.swing.JTextField tHarga;
    private javax.swing.JTextField tKodeMenu;
    private javax.swing.JTextField tNamaMenu;
    private javax.swing.JTable tblMenu;
    // End of variables declaration//GEN-END:variables
    
    public String formatRupiah(int angka) {
        java.text.DecimalFormatSymbols symbols = new java.text.DecimalFormatSymbols(new java.util.Locale("id", "ID"));
        symbols.setCurrencySymbol("Rp");
        symbols.setMonetaryDecimalSeparator(',');
        symbols.setGroupingSeparator('.');

        java.text.DecimalFormat formatter = new java.text.DecimalFormat("¬§ #,###", symbols);
        return formatter.format(angka);
    }
}
